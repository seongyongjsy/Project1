프로젝트 복사
1. 탐색기에서 프로젝트 폴더 우클릭 복사-붙여넣기 후 이름 변경.
2. 프로젝트 핵심 설정 폴더(프로젝트 이름 폴더) 이름 변경. 
3. 여러 설정 파일에서 위 폴더를 가리키는 경로 설정 변경.
  3-1. manage.py
  3-2. asgi.py
  3-3. settings.py
  3-4. wsgi.py


  정적 파일(Static File)
  - CSS, JS, 이미지, 오디오 등의 파일을 부르는 표현.
  - 장고에서는 정적 파일들을 별도의 폴더에 저장해서 관리하도록 권장.
 
  - 기본적으로 앱 폴더 내 static 폴더에 저장.
  - 공용 폴더를 만들어서 저장하고자 할 때는 settings.py 파일에서 STATICFILES_DIRS 옵션을 설정해야 한다.

  - html 파일에서 정적 파일의 경로를 작성해서 적용한다.
    - settings.py 파일의 STATIC_URL 옵션 값에 맞춰 정적 파일 경로를 하드코딩 할 수 있다.
    - load static 템플릿 태그 작성 후, static 템플릿 태그를 사용해서 파일 경로를 동적으로 할당할 수 있다. 
  
  setting.py 파일 내 정적 파일 관련 옵션
  - STATIC_URL: 정적 파일의 경로를 작성할 때, 웹 문서에서 경로 값이 이 값으로 시작하면 정적 파일 경로로 인식한다.
  - STATICFILES_DIRS: 정적 파일을 저장하는 경로를 직접 지정할 때 사용하는 옵션.


관리자 페이지 커스터마이징
- 장고에서 기본적으로 제공하는 관리자 페이지에 대해 커스터마이징 기능을 지원한다.
- 각 앱 내 admin.py 파일에 ModelAdmin 클래스를 상속받는 사용자 정의 모델 관리 클래스를 작성한다. 
- 관리 대상 모델 클래스와 모델 관리자 클래스를 함께 등록한다.
- 관리자 페이지 템플릿을 재정의해서 수정할 수도 있다.

폼(Form)
- 웹 사이트에서 많이 사용하는 form 태그와 관련된 기능을 지원하는 클래스.
- 각 앱 내 forms.py 파일에 ModelForm 클래스를 상속받는 사용자 정의 모델 폼 클래스를 작성한다.
  - forms.py 파일은 직접 만들어야 한다.
- 모델 폼 클래스에 Meta 중첩 클래스를 작성한다.
  - Meta 클래스에 폼에서 다룰 model과 fields를 설정한다.
- 이후 클래스 기반 뷰에서 form_class 옵션으로 모델 폼 클래스를 지정하고,
  템플릿에서 {{ form }} 변수를 통해 모델 폼 클래스를 사용한다.